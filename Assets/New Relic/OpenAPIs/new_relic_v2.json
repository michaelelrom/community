{
  "openapi": "3.0.1",
  "info": {
    "title": "New Relic",
    "version": "v2",
    "description": "Welcome to the New Relic API Explorer, which provides interactive access and documentation for the New Relic v2 REST API. For an introduction, see the [Getting started with New Relic's API Explorer guide](https://docs.newrelic.com/docs/features/getting-started-with-new-relics-api-explorer) - or just start exploring!\n\nTo navigate to other New Relic APIs, use the links at the top of the page.\n\nNeed help with API keys? See our [documentation](https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/api-key).\n\nThis authorization function of this page uses the API-KEY header. \n\nIf you are using a deprecated Account API Key, it can still work against our systems by sending the key under the \"X-API-KEY\" header, however this functionality is deprecated and not supported by this docs site. \n\nPlease use a User API Key instead.\n"
  },
  "servers": [
    {
      "url": "https://api.newrelic.com/v2/",
      "description": "US Production"
    },
    {
      "url": "https://api.eu.newrelic.com/v2/",
      "description": "EU Production"
    },
    {
      "url": "https://staging-api.newrelic.com/v2/",
      "description": "Staging"
    },
    {
      "url": "https://api.newrelic.com/graphql/",
      "description": "GraphQL"
    }
  ],
  "security": [
    {
      "APIKeyHeader": []
    }
  ],
  "paths": {
    "/graphql": {
      "post": {
        "tags": [
          "GraphQL"
        ],
        "summary": "GraphQL",
        "description": "Execute a GraphQL query",
        "requestBody": {
          "description": "Query Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified"
          }
        }
      }
    },
    "/applications.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "List",
        "description": "<p>This API endpoint returns a <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">paginated</a>\nlist of the Applications associated with your New Relic account. The time range for summary data is the last 3-4 minutes.</p>\n\n<p>Applications can be filtered by their name, hosts, the list of application IDs or the application language as\nreported by the agents.</p>\n\n<p>See our documentation for a discussion and examples of\nusing <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/list-application-specific-server-host-instance-ids\" target=\"_blank\"> filters </a>\nand <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/summary-data-examples-v2\" target=\"_blank\">summary data output</a>.</p>\n\n",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Filter by application name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[host]",
            "in": "query",
            "description": "Filter by application host",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[ids]",
            "in": "query",
            "description": "Filter by application ids",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter[language]",
            "in": "query",
            "description": "Filter by application language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exclude_links",
            "in": "query",
            "description": "Exclude links section from the response",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/deployments.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "List",
        "description": "<p>This API endpoint returns a paginated list of the deployments associated with a given application.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\">output pagination</a>.</p>\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Create",
        "description": "<p>This API endpoint creates a deployment record for a given application.\nDeployment records are created with the following attributes:</p>\n\n<p>Required:<br />\nÂ Â - Application ID<br />\nÂ Â - Revision, such as a git SHA<br /></p>\n\n<p>Optional:<br />\nÂ Â - Changelog <br />\nÂ Â - Description <br />\nÂ Â - User posting the deployment<br /></p>\n\n<p>Note that the time of your deployment will be recorded as the current time in UTC.</p>\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Deployment schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deployment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Deployment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "deployment"
      }
    },
    "/applications/{application_id}/deployments/{id}.json": {
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete",
        "description": "<p>This API endpoint deletes the specified deployment record.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Deployment ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/hosts.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "List",
        "description": "<p>This API endpoint returns a <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\npaginated</a> list of hosts associated with the given application. The time range for summary data is the last 3-4 minutes.</p>\n\n<p>Application hosts can be filtered by hostname, or the list of application host IDs.</p>\n\n<p>See our documentation for a discussion and examples of\nusing <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/list-application-specific-server-host-instance-ids\" target=\"_blank\"> filters </a>\nand <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/summary-data-examples-v2\" target=\"_blank\">summary data output</a>.</p>\n\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[hostname]",
            "in": "query",
            "description": "Filter by server hostname",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[ids]",
            "in": "query",
            "description": "Filter by application host ids",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationHostResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationHostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/hosts/{host_id}/metrics.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Metric Names",
        "description": "<p>Return a list of known metrics and their value names for the given resource.</p>\n\n<p>See our documentation for a discussion\non <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\"> output pagination</a>\nand for examples of <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started#examples\" target=\"_blank\">requesting and using metric values</a>.</p>\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "host_id",
            "in": "path",
            "description": "Application Host ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter metrics by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index (will be deprecated)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor for next page (replacing page param)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricListResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MetricListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/hosts/{host_id}/metrics/data.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Metric Data",
        "description": "<p>This API endpoint returns a list of values for each of the requested metrics. The list of available metrics\ncan be returned using the Metric Name API endpoint.</p>\n\n<p>Metric data can be filtered by a number of parameters, including multiple names and values, and by time range.\nMetric names and values will be matched intelligently in the background.</p>\n\n<p>You can also retrieve a summarized data point across the entire time range selected by using the summarize\nparameter.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\noutput pagination</a>, <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/extracting-metric-data\" target=\"_blank\"> time range</a>\nrelated considerations, and for examples of <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started#examples\" target=\"_blank\">requesting and using metric values</a>.</p>\n\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "host_id",
            "in": "path",
            "description": "Application Host ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "names",
            "in": "query",
            "description": "Retrieve specific metrics by name",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "values",
            "in": "query",
            "description": "Retrieve specific metric values",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Retrieve metrics after this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Retrieve metrics before this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Period of timeslices in seconds",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Summarize the data",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Return unformatted raw values",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDataResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/hosts/{id}.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Show",
        "description": "<p>This API endpoint returns a single application host, identified by ID. The time range for summary data is the last 3-4 minutes.</p>\n\n<p>See our documentation for a discussion of\n<a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/summary-data-examples-v2\" target=\"_blank\">summary data output</a>.</p>\n\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Application host ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationHostResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationHostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/instances.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "List",
        "description": "<p>This API endpoint returns a <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\npaginated</a> list of instances associated with the given application. The time range for summary data is the last 3-4 minutes.</p>\n\n<p>Application instances can be filtered by hostname, or the list of application instance IDs.</p>\n\n<p>See our documentation for a discussion and examples of\nusing <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/list-application-specific-server-host-instance-ids\" target=\"_blank\"> filters </a>\nand <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/summary-data-examples-v2\" target=\"_blank\">summary data output</a>.</p>\n\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[hostname]",
            "in": "query",
            "description": "Filter by server hostname",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[ids]",
            "in": "query",
            "description": "Filter by application instance ids",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInstanceResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/instances/{id}.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Show",
        "description": "<p>This API endpoint returns a single application instance, identified by ID. The time range for summary data is the last 3-4 minutes.</p>\n\n<p>See our documentation for a discussion of\n <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/summary-data-examples-v2\" target=\"_blank\">summary data output</a>.</p>\n\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Application instance ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInstanceResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/instances/{instance_id}/metrics.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Metric Names",
        "description": "<p>Return a list of known metrics and their value names for the given resource.</p>\n\n<p>See our documentation for a discussion\non <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\"> output pagination</a>\nand for examples of <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started#examples\" target=\"_blank\">requesting and using metric values</a>.</p>\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "Application Instance ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter metrics by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index (will be deprecated)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor for next page (replacing page param)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricParserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MetricParserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/instances/{instance_id}/metrics/data.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Metric Data",
        "description": "<p>This API endpoint returns a list of values for each of the requested metrics. The list of available metrics\ncan be returned using the Metric Name API endpoint.</p>\n\n<p>Metric data can be filtered by a number of parameters, including multiple names and values, and by time range.\nMetric names and values will be matched intelligently in the background.</p>\n\n<p>You can also retrieve a summarized data point across the entire time range selected by using the summarize\nparameter.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\noutput pagination</a>, <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/extracting-metric-data\" target=\"_blank\"> time range</a>\nrelated considerations, and for examples of <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started#examples\" target=\"_blank\">requesting and using metric values</a>.</p>\n\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "Application Instance ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "names",
            "in": "query",
            "description": "Retrieve specific metrics by name",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "values",
            "in": "query",
            "description": "Retrieve specific metric values",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Retrieve metrics after this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Retrieve metrics before this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Period of timeslices in seconds",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Summarize the data",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Return unformatted raw values",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDataResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/metrics.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Metric Names",
        "description": "<p>Return a list of known metrics and their value names for the given resource.</p>\n\n<p>See our documentation for a discussion\non <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\"> output pagination</a>\nand for examples of <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started#examples\" target=\"_blank\">requesting and using metric values</a>.</p>\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter metrics by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index (will be deprecated)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor for next page (replacing page param)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricParserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MetricParserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/metrics/data.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Metric Data",
        "description": "<p>This API endpoint returns a list of values for each of the requested metrics. The list of available metrics\ncan be returned using the Metric Name API endpoint.</p>\n\n<p>Metric data can be filtered by a number of parameters, including multiple names and values, and by time range.\nMetric names and values will be matched intelligently in the background.</p>\n\n<p>You can also retrieve a summarized data point across the entire time range selected by using the summarize\nparameter.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\noutput pagination</a>, <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/extracting-metric-data\" target=\"_blank\"> time range</a>\nrelated considerations, and for examples of <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started#examples\" target=\"_blank\">requesting and using metric values</a>.</p>\n\n",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "names",
            "in": "query",
            "description": "Retrieve specific metrics by name",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "values",
            "in": "query",
            "description": "Retrieve specific metric values",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Retrieve metrics after this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Retrieve metrics before this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Period of timeslices in seconds",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Summarize the data",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Return unformatted raw values",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDataResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}.json": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Show",
        "description": "<p>This API endpoint returns a single Application, identified by ID. The time range for summary data is the last 3-4 minutes.</p>\n\n<p>See our documentation for a discussion of the\n<a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/summary-data-examples-v2\" target=\"_blank\"> summary data output</a>.</p>\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Update",
        "description": "<p>This API endpoint allows you to update certain parameters of your application.</p>\n\n<p>The input is expected to be in <strong>JSON or XML</strong> format in the body parameter of the PUT request. The exact\nschema is defined below. Any extra parameters passed in the body <strong>will be ignored</strong>.</p>\n\n<p>See our documentation for a discussion and simple example of\n<a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/changing-alias-your-application-v2\" target=\"_blank\"> updating</a>\nan application.</p>\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Application schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "application"
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete",
        "description": "<p>This API endpoint deletes an application and all of its reported data.</p>\n\n<p><strong>WARNING</strong>: Only applications that have stopped reporting can be deleted. This is an irreversible process\nwhich will delete all reported data for this application.</p>\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/key_transactions.json": {
      "get": {
        "tags": [
          "Key Transactions"
        ],
        "summary": "List",
        "description": "<p>This API endpoint returns a <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">paginated</a>\nlist of the key transactions associated with your New Relic account.  The time range for summary data is the last 10 minutes.</p>\n\n<p>Key transactions can be filtered by their name or list of IDs.</p>\n\n<p>See our documentation for a discussion of\n<a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/summary-data-examples-v2\" target=\"_blank\">summary data output</a>.</p>\n\n",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Filter by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[ids]",
            "in": "query",
            "description": "Filter by policy IDs",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyTransactionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/KeyTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/key_transactions/{id}.json": {
      "get": {
        "tags": [
          "Key Transactions"
        ],
        "summary": "Show",
        "description": "<p>This endpoint returns a single key transaction, identified by ID. The time range for summary data is the last 10 minutes.</p>\n\n<p>See our documentation for a discussion of\n<a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/application-examples-v2/summary-data-examples-v2\" target=\"_blank\">summary data output</a>.</p>\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Key transaction ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyTransactionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/KeyTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mobile_applications.json": {
      "get": {
        "tags": [
          "Mobile Applications"
        ],
        "summary": "List",
        "description": "<p>This API endpoint returns a list of the Mobile Applications associated with your New Relic account.</p>\n\n<p>MobileApplications can be filtered by their name, or by the application IDs.</p>\n",
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileApplicationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MobileApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mobile_applications/{id}.json": {
      "get": {
        "tags": [
          "Mobile Applications"
        ],
        "summary": "Show",
        "description": "<p>This API endpoint returns a single Mobile Application, identified by ID. The time range for summary data is the last 30 minutes.</p>\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mobile Application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MobileApplicationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MobileApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mobile_applications/{mobile_application_id}/metrics.json": {
      "get": {
        "tags": [
          "Mobile Applications"
        ],
        "summary": "Metric Names",
        "description": "<p>Return a list of known metrics and their value names for the given resource.</p>\n\n<p>See our documentation for a discussion\non <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\"> output pagination</a>\nand for examples of <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started#examples\" target=\"_blank\">requesting and using metric values</a>.</p>\n",
        "parameters": [
          {
            "name": "mobile_application_id",
            "in": "path",
            "description": "Mobile application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter metrics by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index (will be deprecated)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor for next page (replacing page param)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricParserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MetricParserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mobile_applications/{mobile_application_id}/metrics/data.json": {
      "get": {
        "tags": [
          "Mobile Applications"
        ],
        "summary": "Metric Data",
        "description": "<p>This API endpoint returns a list of values for each of the requested metrics. The list of available metrics\ncan be returned using the Metric Name API endpoint.</p>\n\n<p>Metric data can be filtered by a number of parameters, including multiple names and values, and by time range.\nMetric names and values will be matched intelligently in the background.</p>\n\n<p>You can also retrieve a summarized data point across the entire time range selected by using the summarize\nparameter.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\noutput pagination</a>, <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/extracting-metric-data\" target=\"_blank\"> time range</a>\nrelated considerations, and for examples of <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started#examples\" target=\"_blank\">requesting and using metric values</a>.</p>\n\n",
        "parameters": [
          {
            "name": "mobile_application_id",
            "in": "path",
            "description": "Mobile application ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "names",
            "in": "query",
            "description": "Retrieve specific metrics by name",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "values",
            "in": "query",
            "description": "Retrieve specific metric values",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Retrieve metrics after this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Retrieve metrics before this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Period of timeslices in seconds",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "summarize",
            "in": "query",
            "description": "Summarize the data",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "raw",
            "in": "query",
            "description": "Return unformatted raw values",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDataResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_channels.json": {
      "get": {
        "tags": [
          "Deprecation Notice - Alerts Channels"
        ],
        "summary": "List",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint works with new Alerts on alerts.newrelic.com.</p>\n\n<p>It returns a list of the channels associated with your New Relic account.</p>\n\n<p>Note: See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#channels-list\">listing notification channels</a>.</p>\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deprecation Notice - Alerts Channels"
        ],
        "summary": "Create",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint works with new Alerts on alerts.newrelic.com.</p>\n\n<p>It creates a channel associated with your New Relic account.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#channels-create\">creating notification channels</a>.</p>\n\n<p>Channel type configuration options:</p>\n\n<ul>\n  <li>\n    <p>Email</p>\n\n    <p>{</p>\n\n    <pre><code>\"recipients\" : \"test@google.com\",\n\"include_json_attachment\" : true\n</code></pre>\n\n    <p>}</p>\n  </li>\n  <li>\n    <p>HipChat</p>\n\n    <p>{</p>\n\n    <pre><code>\"auth_token\": \"abc123\",\n\"room_id\": \"google.com\"\n</code></pre>\n\n    <p>}</p>\n  </li>\n  <li>\n    <p>OpsGenie</p>\n\n    <p>{</p>\n\n    <pre><code>\"api_key\": \"abc123\",\n\"teams\": \"team1\",\n\"tags\": \"tag1\",\n\"recipients\": \"me@me.com\"\n</code></pre>\n\n    <p>}</p>\n  </li>\n  <li>\n    <p>Slack</p>\n\n    <p>{</p>\n\n    <pre><code>\"url\": \"http://test.com\",\n\"channel\": \"channel1\"\n</code></pre>\n\n    <p>}</p>\n  </li>\n  <li>\n    <p>Campfire</p>\n\n    <p>{</p>\n\n    <pre><code>\"subdomain\": \"mysubdomain\",\n\"token\": \"123abc\",\n\"room\": \"room1\"\n</code></pre>\n\n    <p>}</p>\n  </li>\n  <li>\n    <p>Victorops</p>\n\n    <p>{</p>\n\n    <pre><code>\"key\": \"mykey\",\n\"route_key\": \"theroute\"\n</code></pre>\n\n    <p>}</p>\n  </li>\n  <li>\n    <p>PagerDuty</p>\n\n    <p>{</p>\n\n    <pre><code>\"service_key\": \"myservicekey\"\n</code></pre>\n\n    <p>}</p>\n  </li>\n  <li>\n    <p>Webhook (json)</p>\n\n    <p>{</p>\n\n    <pre><code>\"base_url\": \"http://test.com\",\n\"auth_username\": \"username\",\n\"auth_password\": \"password\",\n\"payload_type\": \"application/json\",\n\"payload\": {\n  \"account_id\": \"$ACCOUNT_ID\",\n  \"account_name\": \"$ACCOUNT_NAME\",\n  \"condition_id\": \"$CONDITION_ID\",\n  \"condition_name\": \"$CONDITION_NAME\",\n  \"current_state\": \"$EVENT_STATE\",\n  \"details\": \"$EVENT_DETAILS\",\n  \"event_type\": \"$EVENT_TYPE\",\n  \"incident_acknowledge_url\": \"$INCIDENT_ACKNOWLEDGE_URL\",\n  \"incident_id\": \"$INCIDENT_ID\",\n  \"incident_url\": \"$INCIDENT_URL\",\n  \"owner\": \"$EVENT_OWNER\",\n  \"policy_name\": \"$POLICY_NAME\",\n  \"policy_url\": \"$POLICY_URL\",\n  \"runbook_url\": \"$RUNBOOK_URL\",\n  \"severity\": \"$SEVERITY\",\n  \"targets\": \"$TARGETS\",\n  \"timestamp\": \"$TIMESTAMP\",\n  \"violation_chart_url\": \"$VIOLATION_CHART_URL\"\n},\n\"headers\": {\"header1\": \"test\", \"header2\": \"test\"}\n</code></pre>\n\n    <p>}</p>\n  </li>\n  <li>\n    <p>Webhook (x-www-form-urlencoded)</p>\n\n    <p>{</p>\n\n    <pre><code>\"base_url\": \"http://test.com\",\n\"auth_username\": \"username\",\n\"auth_password\": \"password\",\n\"payload_type\": \"application/x-www-form-urlencoded\",\n\"payload\": {\n  \"account_id\": \"$ACCOUNT_ID\",\n  \"account_name\": \"$ACCOUNT_NAME\",\n  \"condition_id\": \"$CONDITION_ID\",\n  \"condition_name\": \"$CONDITION_NAME\",\n  \"current_state\": \"$EVENT_STATE\",\n  \"details\": \"$EVENT_DETAILS\",\n  \"event_type\": \"$EVENT_TYPE\",\n  \"incident_acknowledge_url\": \"$INCIDENT_ACKNOWLEDGE_URL\",\n  \"incident_id\": \"$INCIDENT_ID\",\n  \"incident_url\": \"$INCIDENT_URL\",\n  \"owner\": \"$EVENT_OWNER\",\n  \"policy_name\": \"$POLICY_NAME\",\n  \"policy_url\": \"$POLICY_URL\",\n  \"runbook_url\": \"$RUNBOOK_URL\",\n  \"severity\": \"$SEVERITY\",\n  \"targets\": \"$TARGETS\",\n  \"timestamp\": \"$TIMESTAMP\",\n  \"violation_chart_url\": \"$VIOLATION_CHART_URL\"\n},\n\"headers\": {\"header1\": \"test\", \"header2\": \"test\"}\n</code></pre>\n\n    <p>}</p>\n  </li>\n</ul>\n\n",
        "parameters": [
          {
            "name": "policy_ids",
            "in": "query",
            "description": "Policy IDs to associate with channel",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "channel schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Channel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Channel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "channel"
      }
    },
    "/alerts_channels/{channel_id}.json": {
      "delete": {
        "tags": [
          "Deprecation Notice - Alerts Channels"
        ],
        "summary": "Delete",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint deletes Alerts notification channels.</p>\n\n<p>Note: <code>User</code> notification channels cannot be deleted.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#channels-delete\">deleting notification channels</a>.</p>\n\n",
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "description": "Channel ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_conditions.json": {
      "get": {
        "tags": [
          "Alerts Conditions"
        ],
        "summary": "List",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to list APM Application and Key Transaction, Browser and Mobile application metric conditions for your alert policies.</p>\n\n<p>Note: <strong>Conditions for web transaction percentiles, or conditions targeting labels (dynamic targeting), are not available.</strong></p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\noutput pagination</a>.</p>\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "query",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_conditions/policies/{policy_id}.json": {
      "post": {
        "tags": [
          "Alerts Conditions"
        ],
        "summary": "Create",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint allows you to create APM Application and Key Transaction, Browser and Mobile application metric conditions for your alert policies.</p>\n\n<p><strong>Conditions for web transaction percentiles, or conditions targeting labels (dynamic targeting), are not available.</strong></p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#conditions-create\" target=\"_blank\">creating conditions for policies</a>.\n<br /></p>\n\n<p>All fields are required except for runbook_url, enabled (defaults to false), user_defined.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#type\" target=\"_blank\">type</a>: apm_app_metric, apm_kt_metric, servers_metric, browser_metric, mobile_metric.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#name\" target=\"_blank\">name</a>: A title for your condition.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#enabled\" target=\"_blank\">enabled</a>: The status of your condition (optional).</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#entities\" target=\"_blank\">entities</a>: An array of instance IDs associated with your condition.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#metric\" target=\"_blank\">metric</a>: The metric field accepts parameters based on the condition <b>type</b> selected as follows:</p>\n\n<p>Â Â When <b>apm_app_metric</b>: apdex, error_percentage, response_time_web, response_time_background, throughput_web, throughput_background, user_defined.</p>\n\n<p>Â Â When <b>apm_kt_metric</b>: apdex, error_percentage, error_count, response_time, throughput.</p>\n\n<p>Â Â When <b>servers_metric</b>: cpu_percentage, disk_io_percentage, memory_percentage, fullest_disk_percentage, load_average_one_minute, user_defined.</p>\n\n<p>Â Â When <b>browser_metric</b>: end_user_apdex, total_page_load, page_rendering, web_application, network, dom_processing, request_queuing, ajax_response_time, page_views_with_js_errors, page_view_throughput, ajax_throughput, user_defined.</p>\n\n<p>Â Â When <b>mobile_metric</b>: database, images, json, network, view_loading, network_error_percentage, status_error_percentage, mobile_crash_rate, user_defined.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/rest-api-alerts/new-relic-alerts-rest-api/alerts-conditions-api-field-names#condition-scope\">condition_scope</a>: Set to either <code>instance</code> to target a Java application instance or <code>application</code> for a Java app.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/rest-api-alerts/new-relic-alerts-rest-api/alerts-conditions-api-field-names#violation_close_timer\">violation_close_timer</a> (in hours): 1, 2, 4, 8, 12, 24. Duration after which instance-based (including JVM health metric) violations will automatically close.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#runbook_url\" target=\"_blank\">runbook_url</a>: Runbook URL to display in notifications (optional).</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_duration\" target=\"_blank\">terms[duration]</a> (in minutes): 5, 10, 15, 30, 60, 120.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_operator\" target=\"_blank\">terms[operator]</a>: above, below, equal.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_priority\" target=\"_blank\">terms[priority]</a>: critical, warning.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_threshold\" target=\"_blank\">terms[threshold]</a>: Must be 0 or greater.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_time_function\" target=\"_blank\">terms[time_function]</a>: all, any.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#user_defined_metric\" target=\"_blank\">user_defined[metric]</a>: A custom metric to be evaluated.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#user_defined_value_function\" target=\"_blank\">user_defined[value_function]</a>: average, min, max, total, sample_size.</p>\n\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "condition"
      }
    },
    "/alerts_conditions/{condition_id}.json": {
      "put": {
        "tags": [
          "Alerts Conditions"
        ],
        "summary": "Update",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint allows you to update APM Application and Key Transaction, Browser and Mobile application metric conditions for your alert policies.</p>\n\n<p><strong>Conditions for web transaction percentiles, or conditions targeting labels (dynamic targeting), are not available.</strong></p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See Alerts Conditions &gt; Create for an explanation of the field values or the online\ndocumentation on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#conditions-update\" target=\"_blank\">updating conditions for policies</a>.</p>\n\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "condition"
      },
      "delete": {
        "tags": [
          "Alerts Conditions"
        ],
        "summary": "Delete",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to delete APM Application and Key Transaction, Browser and Mobile application metric conditions for your alert policies.</p>\n\n<p><strong>Conditions for web transaction percentiles, or conditions targeting labels (dynamic targeting), are not available.</strong></p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#conditions-delete\" target=\"_blank\">deleting conditions</a>.</p>\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_entity_conditions/{entity_id}.json": {
      "get": {
        "tags": [
          "Alerts Entity Conditions"
        ],
        "summary": "List",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to list the Alerts conditions an entity is part of.</p>\n\n<p>Entity type options (Synthetics is not yet supported):</p>\n\n<pre><code>BrowserApplication\n\nApplication\n\nMobileApplication\n\nServer\n\nKeyTransaction\n</code></pre>\n",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "description": "Entity ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "entity_type",
            "in": "query",
            "description": "Entity Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Alerts Entity Conditions"
        ],
        "summary": "Add",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to add an entity to a specified Alerts condition.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.\n<br />\n  Entity type options (Synthetics is not yet supported):</p>\n\n<pre><code>BrowserApplication\n\nApplication\n\nMobileApplication\n\nServer\n\nKeyTransaction\n</code></pre>\n",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "description": "Entity id to add",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "entity_type",
            "in": "query",
            "description": "Entity Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "condition_id",
            "in": "query",
            "description": "Alerts condition ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Alerts Entity Conditions"
        ],
        "summary": "Remove",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to disassociate an entity with a specified Alerts condition.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>Entity type options (Synthetics is not yet supported):</p>\n\n<pre><code>BrowserApplication\n\nApplication\n\nMobileApplication\n\nServer\n\nKeyTransaction\n</code></pre>\n",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "description": "Entity id to remove",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "entity_type",
            "in": "query",
            "description": "Entity Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "condition_id",
            "in": "query",
            "description": "Alerts condition ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_events.json": {
      "get": {
        "tags": [
          "Deprecation Notice - Alerts Events"
        ],
        "summary": "List",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to list the alert events for your account.</p>\n\n<p>Alerts events can be filter by product, target type, group ID, instance ID, and event type.</p>\n\n<p>The options for products are: <b>APM</b>, <b>BROWSER</b>, <b>MOBILE</b>, <b>SERVERS</b>, <b>SYNTHETICS</b>, and <b>ALERTS</b>.</p>\n\n<p>The options for entity type are: <b>Application</b>, <b>Server</b>, <b>KeyTransaction</b>, <b>MobileApplication</b>, <b>BrowserApplication</b>, and <b>Monitor</b>.</p>\n\n<p>The options for event type are: <b>NOTIFICATION</b>, <b>DEPLOYMENT</b>, <b>VIOLATION_OPEN</b>, <b>VIOLATION_CLOSE</b>, <b>VIOLATION</b>, and <b>INSTRUMENTATION</b>.</p>\n\n<p>The group ID option is normally the same as the entity ID (e.g. an Application group ID and entity ID will be the same)</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\noutput pagination</a>.</p>\n",
        "parameters": [
          {
            "name": "filter[product]",
            "in": "query",
            "description": "Filter by New Relic product",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[entity_type]",
            "in": "query",
            "description": "Filter by entity type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[entity_group_id]",
            "in": "query",
            "description": "Filter by entity group ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[entity_id]",
            "in": "query",
            "description": "Filter by entity ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filter[event_type]",
            "in": "query",
            "description": "Filter by event type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[incident_id]",
            "in": "query",
            "description": "Filter by incident id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentEventResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RecentEventResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_external_service_conditions.json": {
      "get": {
        "tags": [
          "Alerts External Service Conditions"
        ],
        "summary": "List",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to list the external service conditions for your alert policy.</p>\n\n<p>See our documentation for a discussion on\n<a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\"> output pagination</a>.</p>\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "query",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalServiceConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalServiceConditionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_external_service_conditions/policies/{policy_id}.json": {
      "post": {
        "tags": [
          "Alerts External Service Conditions"
        ],
        "summary": "Create",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint allows you to create external service conditions for your alert policies.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#ext-conditions-create\" target=\"_blank\">creating conditions for external services</a>.</p>\n\n<p>All fields are required except for runbook_url, enabled (defaults to false).</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#type\" target=\"_blank\">type</a>: apm_external_service, mobile_external_service.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#name\" target=\"_blank\">name</a>: A title for your condition.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#enabled\" target=\"_blank\">enabled</a>: The status of your condition (optional).</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#entities\" target=\"_blank\">entities</a>: An array of instance IDs associated with your condition.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#external_service_url\" target=\"_blank\">external_service_url</a>: The URL of the external service. Must not include protocol (example.com, not https://example.com)</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#metric\" target=\"_blank\">metric</a>: The metric field accepts parameters based on the condition <b>type</b> selected as follows:</p>\n\n<p>Â Â When <b>apm_external_service</b>: response_time_average, response_time_minimum, response_time_maximum, throughput.</p>\n\n<p>Â Â When <b>mobile_external_service</b>: response_time_average, response_time_minimum, response_time_maximum, throughput, network_failure_percentage, http_status_error_percentage.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#runbook_url\" target=\"_blank\">runbook_url</a>: Runbook URL to display in notifications (optional).</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_duration\" target=\"_blank\">terms[duration]</a> (in minutes): 5, 10, 15, 30, 60, 120.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_operator\" target=\"_blank\">terms[operator]</a>: above, below, equal.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_priority\" target=\"_blank\">terms[priority]</a>: critical, warning.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_threshold\" target=\"_blank\">terms[threshold]</a>: Must be 0 or greater.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#terms_time_function\" target=\"_blank\">terms[time_function]</a>: all, any.</p>\n\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalServiceCondition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExternalServiceCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalServiceConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalServiceConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "external_service_condition"
      }
    },
    "/alerts_external_service_conditions/{condition_id}.json": {
      "put": {
        "tags": [
          "Alerts External Service Conditions"
        ],
        "summary": "Update",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to update external service conditions for your alert policies.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See Alerts External Service Conditions &gt; Create for an explanation of the field values used in this command or the online documentation on\n<a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#ext-conditions-update\" target=\"_blank\">updating conditions for external services</a>.</p>\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalServiceCondition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExternalServiceCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalServiceConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalServiceConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "external_service_condition"
      },
      "delete": {
        "tags": [
          "Alerts External Service Conditions"
        ],
        "summary": "Delete",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint allows you to delete external service conditions associated with your alert policy.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#ext-conditions-delete\" target=\"_blank\">deleting External services conditions</a>.</p>\n\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalServiceConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalServiceConditionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_incidents.json": {
      "get": {
        "tags": [
          "Alerts Incidents"
        ],
        "summary": "List",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint returns a list of the Incidents associated with your New Relic account.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#incidents\" target=\"_blank\">listing incidents</a>\nand <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">output pagination</a>.</p>\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "only_open",
            "in": "query",
            "description": "Filter by open incidents",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_location_failure_conditions/policies/{policy_id}.json": {
      "get": {
        "tags": [
          "Deprecation Notice - Alerts Location Failure Conditions"
        ],
        "summary": "List",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to list the alerts location failure conditions for your Alerts policy.</p>\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConditionResponse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConditionResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deprecation Notice - Alerts Location Failure Conditions"
        ],
        "summary": "Create",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to create the alerts location failure conditions for your Alerts policy.</p>\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConditionResponse"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConditionResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "condition"
      }
    },
    "/alerts_location_failure_conditions/{condition_id}.json": {
      "put": {
        "tags": [
          "Deprecation Notice - Alerts Location Failure Conditions"
        ],
        "summary": "Update",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to update the alerts location failure conditions for your Alerts policy.</p>\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "condition"
      },
      "delete": {
        "tags": [
          "Deprecation Notice - Alerts Location Failure Conditions"
        ],
        "summary": "Delete",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to Delete the alerts location failure conditions for your Alerts policy.</p>\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "condition"
      }
    },
    "/alerts_nrql_conditions.json": {
      "get": {
        "tags": [
          "Alerts NRQL Conditions"
        ],
        "summary": "List",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to list the NRQL conditions for your Alerts policy.</p>\n\n<p>Note: <strong>NRQL Baseline conditions are not available.</strong></p>\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "query",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NrqlConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NrqlConditionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_nrql_conditions/policies/{policy_id}.json": {
      "post": {
        "tags": [
          "Alerts NRQL Conditions"
        ],
        "summary": "Create",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to create NRQL conditions for your Alerts policy.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#conditions-create\" target=\"_blank\">creating conditions for policies</a>.</p>\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NrqlCondition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NrqlCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NrqlConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NrqlConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "nrql_condition"
      }
    },
    "/alerts_nrql_conditions/{condition_id}.json": {
      "put": {
        "tags": [
          "Alerts NRQL Conditions"
        ],
        "summary": "Update",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to update NRQL conditions for your Alerts policy.</p>\n\n<p><strong>NRQL Baseline conditions are not available.</strong></p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See Alerts NRQL Conditions &gt; Create for an explanation of the field values.</p>\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NrqlCondition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NrqlCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NrqlConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NrqlConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "nrql_condition"
      },
      "delete": {
        "tags": [
          "Alerts NRQL Conditions"
        ],
        "summary": "Delete",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to delete NRQL conditions for your Alerts policy.</p>\n\n<p><strong>NRQL Baseline conditions are not available.</strong></p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NrqlConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NrqlConditionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_policies.json": {
      "get": {
        "tags": [
          "Alerts Policies"
        ],
        "summary": "List",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint works with new Alerts on alerts.newrelic.com.</p>\n\n<p>This API endpoint returns a list of the alert policies associated with your New Relic account.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\noutput pagination</a>.</p>\n\n",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Name (must be exact match)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Alerts Policies"
        ],
        "summary": "Create",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint works with new Alerts on alerts.newrelic.com.</p>\n\n<p>This Alerts API endpoint creates a policy associated with your New Relic account.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>Rollup stategy options:</p>\n\n<ul>\n  <li>PER_POLICY</li>\n  <li>PER_CONDITION</li>\n  <li>PER_CONDITION_AND_TARGET</li>\n</ul>\n\n<p>See our documentation for a discussion on using the REST API for\n<a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#policies-create\" target=\"_blank\">creating new policies</a>.</p>\n\n",
        "requestBody": {
          "description": "Policy Schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "policy"
      }
    },
    "/alerts_policies/{policy_id}.json": {
      "put": {
        "tags": [
          "Alerts Policies"
        ],
        "summary": "Update",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint updates Alerts policies associated with your New Relic account.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on using the REST API for\n<a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#policies-update\" target=\"_blank\">updating policies</a>.</p>\n\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "description": "Policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Policy Schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "policy"
      },
      "delete": {
        "tags": [
          "Alerts Policies"
        ],
        "summary": "Delete",
        "description": "ðŸ”¥ðŸ”¥ New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint deletes Alerts policies associated with your New Relic account.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on using the REST API for\n<a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#policies-delete\" target=\"_blank\">deleting policies</a>.</p>\n\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "description": "Policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_policy_channels.json": {
      "put": {
        "tags": [
          "Deprecation Notice - Alerts Policy Channels"
        ],
        "summary": "Update",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint updates policy/channel associations.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#policy-channels-update\">updating notification channels with policies</a>.</p>\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "query",
            "description": "Policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "channel_ids",
            "in": "query",
            "description": "Channel IDs",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyChannelsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyChannelsResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deprecation Notice - Alerts Policy Channels"
        ],
        "summary": "Delete",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint deletes Alerts policy/channel associations.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#policy-channels-delete\">deleting notification channels with policies</a>.</p>\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "query",
            "description": "Policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "channel_id",
            "in": "query",
            "description": "Channel ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_synthetics_conditions.json": {
      "get": {
        "tags": [
          "Alerts Synthetics Conditions"
        ],
        "summary": "List",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint allows you to list the Synthetics conditions for your alert policy.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#synthetics-conditions-list\" target=\"_blank\">listing Synthetic conditions</a>\nand <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\"> output pagination</a>.</p>\n\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "query",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticsConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticsConditionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_synthetics_conditions/policies/{policy_id}.json": {
      "post": {
        "tags": [
          "Alerts Synthetics Conditions"
        ],
        "summary": "Create",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to create Synthetics conditions for your alert policies.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#synthetics-conditions-create\" target=\"_blank\">creating Synthetic conditions</a>.</p>\n\n<p>All fields are required except for runbook_url, enabled (defaults to false).</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#name\" target=\"_blank\">name</a>: A title for your condition.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#monitor_id\" target=\"_blank\">monitor_id</a>: The GUID of the Synthetics monitor to alert on.</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#runbook_url\" target=\"_blank\">runbook_url</a>: Runbook URL to display in notifications (optional).</p>\n\n<p><a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/alerts-conditions-api-field-names#enabled\" target=\"_blank\">enabled</a>: The status of your condition (optional).</p>\n",
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "description": "Alerts policy ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticsCondition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticsCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticsConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticsConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "synthetics_condition"
      }
    },
    "/alerts_synthetics_conditions/{condition_id}.json": {
      "put": {
        "tags": [
          "Alerts Synthetics Conditions"
        ],
        "summary": "Update",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<hr>\n\n<p>This API endpoint allows you to update Synthetics conditions for your alert policies.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#synthetics-conditions-update\" target=\"_blank\">updating Synthetic conditions</a>.</p>\n\n<p>See Alerts Synthetics Conditions &gt; Create for an explanation of the field values used in this command.</p>\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Condition schema",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticsCondition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticsCondition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticsConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticsConditionResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "synthetics_condition"
      },
      "delete": {
        "tags": [
          "Alerts Synthetics Conditions"
        ],
        "summary": "Delete",
        "description": "ðŸ”¥ðŸ”¥ New users should use NRQL Alert Conditions, refer to <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint allows you to delete Synthetics conditions associated with your alert policy.</p>\n\n<p>Note: <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/rest-api-key\">Admin User™s API Key</a> is required.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/alerts/new-relic-alerts/rest-api-alerts/rest-api-calls-new-relic-alerts#synthetics-conditions-delete\" target=\"_blank\">deleting Synthetic conditions</a>.</p>\n\n",
        "parameters": [
          {
            "name": "condition_id",
            "in": "path",
            "description": "Alerts condition ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticsConditionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticsConditionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts_violations.json": {
      "get": {
        "tags": [
          "Deprecation Notice - Alerts Violations"
        ],
        "summary": "List",
        "description": "<strong>ðŸ”¥ This endpoint will be deprecated after 2024/01 ðŸ”¥</strong> New users should use <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/advanced-alerts/alerts-nerdgraph/nerdgraph-api-examples/\">these docs about managing alerts via NerdGraph.</a>\n\n<p>This API endpoint works with new Alerts on alerts.newrelic.com.</p>\n\n<p>It returns a list of the violations associated with your New Relic account.</p>\n\n<p>See our documentation for a discussion on <a href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\">\noutput pagination</a>.</p>\n\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Pagination index",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Retrieve violations created after this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Retrieve violations created before this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "only_open",
            "in": "query",
            "description": "Filter by open violations",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "headers": {
              "link": {
                "description": "Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page and `last` to the last page, unless this page is itself the last page.\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViolationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ViolationResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppSettingsBody": {
        "type": "object",
        "properties": {
          "app_apdex_threshold": {
            "type": "number",
            "format": "float"
          },
          "enable_real_user_monitoring": {
            "type": "boolean"
          },
          "end_user_apdex_threshold": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "AppSettingsResponse": {
        "type": "object",
        "properties": {
          "app_apdex_threshold": {
            "type": "number",
            "format": "float"
          },
          "enable_real_user_monitoring": {
            "type": "boolean"
          },
          "end_user_apdex_threshold": {
            "type": "number",
            "format": "float"
          },
          "use_server_side_config": {
            "type": "boolean"
          }
        }
      },
      "AppSummaryDataResponse": {
        "type": "object",
        "properties": {
          "apdex_score": {
            "type": "number",
            "format": "float"
          },
          "error_rate": {
            "type": "number",
            "format": "float"
          },
          "instance_count": {
            "type": "integer"
          },
          "response_time": {
            "type": "number",
            "format": "float"
          },
          "throughput": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "AppSummaryResponse": {
        "type": "object",
        "properties": {
          "apdex_score": {
            "type": "number",
            "format": "float"
          },
          "apdex_target": {
            "type": "number",
            "format": "float"
          },
          "concurrent_instance_count": {
            "type": "integer"
          },
          "error_rate": {
            "type": "number",
            "format": "float"
          },
          "host_count": {
            "type": "integer"
          },
          "instance_count": {
            "type": "integer"
          },
          "response_time": {
            "type": "number",
            "format": "float"
          },
          "throughput": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/ApplicationBody"
          }
        }
      },
      "ApplicationBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/AppSettingsBody"
          }
        }
      },
      "ApplicationHostLinksResponse": {
        "type": "object",
        "properties": {
          "application": {
            "type": "integer"
          },
          "application_instances": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "server": {
            "type": "integer"
          }
        }
      },
      "ApplicationHostResponse": {
        "type": "object",
        "properties": {
          "application_hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationHostResponseType"
            }
          }
        }
      },
      "ApplicationHostResponseType": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "application_name": {
            "type": "string"
          },
          "application_summary": {
            "$ref": "#/components/schemas/AppSummaryDataResponse"
          },
          "end_user_summary": {
            "$ref": "#/components/schemas/EndUserSummaryDataResponse"
          },
          "health_status": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "language": {
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/ApplicationHostLinksResponse"
          }
        }
      },
      "ApplicationInstanceLinksResponse": {
        "type": "object",
        "properties": {
          "application": {
            "type": "integer"
          },
          "application_host": {
            "type": "integer"
          },
          "server": {
            "type": "integer"
          }
        }
      },
      "ApplicationInstanceResponse": {
        "type": "object",
        "properties": {
          "application_instance": {
            "$ref": "#/components/schemas/ApplicationInstanceResponseType"
          }
        }
      },
      "ApplicationInstanceResponseType": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "application_name": {
            "type": "string"
          },
          "application_summary": {
            "$ref": "#/components/schemas/AppSummaryDataResponse"
          },
          "end_user_summary": {
            "$ref": "#/components/schemas/EndUserSummaryDataResponse"
          },
          "health_status": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "language": {
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/ApplicationInstanceLinksResponse"
          },
          "port": {
            "type": "integer"
          }
        }
      },
      "ApplicationLinksResponse": {
        "type": "object",
        "properties": {
          "servers": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "application_hosts": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "application_instances": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "ApplicationResponse": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/ApplicationResponseType"
          }
        }
      },
      "ApplicationResponseType": {
        "type": "object",
        "properties": {
          "application_summary": {
            "$ref": "#/components/schemas/AppSummaryResponse"
          },
          "end_user_summary": {
            "$ref": "#/components/schemas/EndUserSummaryResponse"
          },
          "health_status": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "last_reported_at": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "$ref": "#/components/schemas/ApplicationLinksResponse"
          },
          "name": {
            "type": "string"
          },
          "reporting": {
            "type": "boolean"
          },
          "settings": {
            "$ref": "#/components/schemas/AppSettingsResponse"
          }
        }
      },
      "BrowserApplication": {
        "type": "object",
        "properties": {
          "browser_application": {
            "$ref": "#/components/schemas/BrowserApplicationBody"
          }
        }
      },
      "BrowserApplicationBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "BrowserApplicationResponse": {
        "type": "object",
        "properties": {
          "browser_application": {
            "$ref": "#/components/schemas/BrowserApplicationResponseType"
          }
        }
      },
      "BrowserApplicationResponseType": {
        "type": "object",
        "properties": {
          "browser_monitoring_key": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "loader_script": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/ChannelBody"
          }
        }
      },
      "ChannelBody": {
        "type": "object",
        "properties": {
          "configuration": {
            "type": "object",
            "properties": {}
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ChannelLinksResponse": {
        "type": "object",
        "properties": {
          "policy_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "ChannelResponse": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/ChannelResponseType"
          }
        }
      },
      "ChannelResponseType": {
        "type": "object",
        "properties": {
          "configuration": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/ChannelLinksResponse"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Condition": {
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/ConditionBody"
          }
        }
      },
      "ConditionBody": {
        "type": "object",
        "properties": {
          "condition_scope": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "gc_metric": {
            "type": "string"
          },
          "metric": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IJKTermsType"
            }
          },
          "type": {
            "type": "string"
          },
          "user_defined": {
            "$ref": "#/components/schemas/UserDefinedConditionBody"
          },
          "violation_close_timer": {
            "type": "integer"
          }
        }
      },
      "ConditionResponse": {
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/ConditionResponseType"
          }
        }
      },
      "ConditionResponseType": {
        "type": "object",
        "properties": {
          "condition_scope": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "gc_metric": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "metric": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "runbook_url": {
            "type": "string"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IJKTermsType"
            }
          },
          "type": {
            "type": "string"
          },
          "user_defined": {
            "$ref": "#/components/schemas/UserDefinedConditionResponse"
          },
          "violation_close_timer": {
            "type": "integer"
          }
        }
      },
      "CrashSummaryResponse": {
        "type": "object",
        "properties": {
          "crash_count": {
            "type": "integer"
          },
          "crash_rate": {
            "type": "number",
            "format": "float"
          },
          "supports_crash_data": {
            "type": "boolean"
          },
          "unresolved_crash_count": {
            "type": "integer"
          }
        }
      },
      "Deployment": {
        "type": "object",
        "properties": {
          "deployment": {
            "$ref": "#/components/schemas/DeploymentBody"
          }
        }
      },
      "DeploymentBody": {
        "type": "object",
        "properties": {
          "changelog": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "revision": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "DeploymentLinksResponse": {
        "type": "object",
        "properties": {
          "application": {
            "type": "integer"
          }
        }
      },
      "DeploymentResponse": {
        "type": "object",
        "properties": {
          "deployment": {
            "$ref": "#/components/schemas/DeploymentResponseType"
          }
        }
      },
      "DeploymentResponseType": {
        "type": "object",
        "properties": {
          "changelog": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/DeploymentLinksResponse"
          },
          "revision": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "EndUserSummaryDataResponse": {
        "type": "object",
        "properties": {
          "apdex_score": {
            "type": "number",
            "format": "float"
          },
          "response_time": {
            "type": "number",
            "format": "float"
          },
          "throughput": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "EndUserSummaryResponse": {
        "type": "object",
        "properties": {
          "apdex_score": {
            "type": "number",
            "format": "float"
          },
          "apdex_target": {
            "type": "number",
            "format": "float"
          },
          "response_time": {
            "type": "number",
            "format": "float"
          },
          "throughput": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "ExternalServiceCondition": {
        "type": "object",
        "properties": {
          "external_service_condition": {
            "$ref": "#/components/schemas/ExternalServiceConditionBody"
          }
        }
      },
      "ExternalServiceConditionBody": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "external_service_url": {
            "type": "string"
          },
          "metric": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "runbook_url": {
            "type": "string"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IJKTermsType"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ExternalServiceConditionResponse": {
        "type": "object",
        "properties": {
          "external_service_condition": {
            "$ref": "#/components/schemas/ExternalServiceConditionResponseType"
          }
        }
      },
      "ExternalServiceConditionResponseType": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "external_service_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "metric": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "runbook_url": {
            "type": "string"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IJKTermsType"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "IJKTermsType": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "threshold": {
            "type": "string"
          },
          "time_function": {
            "type": "string"
          }
        }
      },
      "IncidentLinksResponse": {
        "type": "object",
        "properties": {
          "policy_id": {
            "type": "integer"
          },
          "violations": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "IncidentResponse": {
        "type": "object",
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentResponseType"
          }
        }
      },
      "IncidentResponseType": {
        "type": "object",
        "properties": {
          "closed_at": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "incident_preference": {
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/IncidentLinksResponse"
          },
          "opened_at": {
            "type": "integer"
          }
        }
      },
      "KeyTransactionLinksResponse": {
        "type": "object",
        "properties": {
          "application": {
            "type": "integer",
            "description": "Application from which this key transaction originated"
          }
        }
      },
      "KeyTransactionResponse": {
        "type": "object",
        "properties": {
          "key_transaction": {
            "$ref": "#/components/schemas/KeyTransactionResponseType"
          }
        }
      },
      "KeyTransactionResponseType": {
        "type": "object",
        "properties": {
          "application_summary": {
            "$ref": "#/components/schemas/AppSummaryResponse"
          },
          "end_user_summary": {
            "$ref": "#/components/schemas/EndUserSummaryResponse"
          },
          "health_status": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "last_reported_at": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "$ref": "#/components/schemas/KeyTransactionLinksResponse"
          },
          "name": {
            "type": "string"
          },
          "reporting": {
            "type": "boolean"
          },
          "transaction_name": {
            "type": "string"
          }
        }
      },
      "Label": {
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelBody"
          }
        }
      },
      "LabelBody": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/LabelLinksBody"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "LabelLinksBody": {
        "type": "object",
        "properties": {
          "servers": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "LabelLinksResponse": {
        "type": "object",
        "properties": {
          "servers": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "LabelOriginsResponse": {
        "type": "object",
        "properties": {
          "agents": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "apm": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "synthetics": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "LabelResponse": {
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelResponseType"
          }
        }
      },
      "LabelResponseType": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/LabelLinksResponse"
          },
          "name": {
            "type": "string"
          },
          "origins": {
            "$ref": "#/components/schemas/LabelOriginsResponse"
          }
        }
      },
      "MetricDataResponse": {
        "type": "object",
        "properties": {
          "metric_data": {
            "$ref": "#/components/schemas/MetricDataResponseType"
          }
        }
      },
      "MetricDataResponseType": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricResponse"
            }
          },
          "metrics_found": {
            "type": "string"
          },
          "metrics_not_found": {
            "type": "string"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MetricListResponse": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricParserResponseType"
            }
          }
        }
      },
      "MetricParserResponse": {
        "type": "object",
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/MetricParserResponseType"
          }
        }
      },
      "MetricParserResponseType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MetricResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "timeslices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimesliceResponse"
            }
          }
        }
      },
      "MobileApplicationResponse": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/MobileApplicationResponseType"
          }
        }
      },
      "MobileApplicationResponseType": {
        "type": "object",
        "properties": {
          "crash_summary": {
            "$ref": "#/components/schemas/CrashSummaryResponse"
          },
          "health_status": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "mobile_summary": {
            "$ref": "#/components/schemas/MobileSummaryDataResponse"
          },
          "name": {
            "type": "string"
          },
          "reporting": {
            "type": "boolean"
          }
        }
      },
      "MobileSummaryDataResponse": {
        "type": "object",
        "properties": {
          "active_users": {
            "type": "integer"
          },
          "calls_per_session": {
            "type": "number",
            "format": "float"
          },
          "failed_call_rate": {
            "type": "number",
            "format": "float"
          },
          "interaction_time": {
            "type": "number",
            "format": "float"
          },
          "launch_count": {
            "type": "integer"
          },
          "remote_error_rate": {
            "type": "number",
            "format": "float"
          },
          "response_time": {
            "type": "number",
            "format": "float"
          },
          "throughput": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "NrqlBody": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "since_value": {
            "type": "string"
          }
        }
      },
      "NrqlCondition": {
        "type": "object",
        "properties": {
          "nrql_condition": {
            "$ref": "#/components/schemas/NrqlConditionBody"
          }
        }
      },
      "NrqlConditionBody": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "expected_groups": {
            "type": "integer"
          },
          "ignore_overlap": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "nrql": {
            "$ref": "#/components/schemas/NrqlBody"
          },
          "runbook_url": {
            "type": "string"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IJKTermsType"
            }
          },
          "value_function": {
            "type": "string"
          }
        }
      },
      "NrqlConditionResponse": {
        "type": "object",
        "properties": {
          "nrql_condition": {
            "$ref": "#/components/schemas/NrqlConditionResponseType"
          }
        }
      },
      "NrqlConditionResponseType": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "expected_groups": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "ignore_overlap": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "nrql": {
            "$ref": "#/components/schemas/NrqlResponse"
          },
          "runbook_url": {
            "type": "string"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IJKTermsType"
            }
          },
          "type": {
            "type": "string"
          },
          "value_function": {
            "type": "string"
          }
        }
      },
      "NrqlResponse": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "since_value": {
            "type": "string"
          }
        }
      },
      "Policy": {
        "type": "object",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/PolicyBody"
          }
        }
      },
      "PolicyBody": {
        "type": "object",
        "properties": {
          "incident_preference": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PolicyChannelsResponse": {
        "type": "object",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/PolicyChannelsResponseType"
          }
        }
      },
      "PolicyChannelsResponseType": {
        "type": "object",
        "properties": {
          "channel_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "id": {
            "type": "integer"
          }
        }
      },
      "PolicyResponse": {
        "type": "object",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/PolicyResponseType"
          }
        }
      },
      "PolicyResponseType": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "incident_preference": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "integer"
          }
        }
      },
      "RecentEventResponse": {
        "type": "object",
        "properties": {
          "recent_event": {
            "$ref": "#/components/schemas/RecentEventResponseType"
          }
        }
      },
      "RecentEventResponseType": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "entity_group_id": {
            "type": "integer"
          },
          "entity_id": {
            "type": "integer"
          },
          "entity_type": {
            "type": "string"
          },
          "event_type": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "incident_id": {
            "type": "integer"
          },
          "priority": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          }
        }
      },
      "SyntheticsCondition": {
        "type": "object",
        "properties": {
          "synthetics_condition": {
            "$ref": "#/components/schemas/SyntheticsConditionBody"
          }
        }
      },
      "SyntheticsConditionBody": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "monitor_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "runbook_url": {
            "type": "string"
          }
        }
      },
      "SyntheticsConditionResponse": {
        "type": "object",
        "properties": {
          "synthetics_condition": {
            "$ref": "#/components/schemas/SyntheticsConditionResponseType"
          }
        }
      },
      "SyntheticsConditionResponseType": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer"
          },
          "monitor_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "runbook_url": {
            "type": "string"
          }
        }
      },
      "TimesliceResponse": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "values": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "UserDefinedConditionBody": {
        "type": "object",
        "properties": {
          "metric": {
            "type": "string"
          },
          "value_function": {
            "type": "string"
          }
        }
      },
      "UserDefinedConditionResponse": {
        "type": "object",
        "properties": {
          "metric": {
            "type": "string"
          },
          "value_function": {
            "type": "string"
          }
        }
      },
      "ViolationEntityResponse": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ViolationLinksResponse": {
        "type": "object",
        "properties": {
          "condition_id": {
            "type": "integer"
          },
          "incident_id": {
            "type": "integer"
          },
          "policy_id": {
            "type": "integer"
          }
        }
      },
      "ViolationResponse": {
        "type": "object",
        "properties": {
          "violation": {
            "$ref": "#/components/schemas/ViolationResponseType"
          }
        }
      },
      "ViolationResponseType": {
        "type": "object",
        "properties": {
          "closed_at": {
            "type": "integer"
          },
          "condition_name": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "entity": {
            "$ref": "#/components/schemas/ViolationEntityResponse"
          },
          "id": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ViolationLinksResponse"
          },
          "opened_at": {
            "type": "integer"
          },
          "policy_name": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "name": "API-Key",
        "in": "header"
      }
    }
  }
}